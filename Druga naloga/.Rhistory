library(actuar)
vzorec <- scan("vzorec3.txt")
View(vzorec)
histogram <- hist(vzorec, main="Histogram", xlab = "Višina odškodnine", ylab= "Frekvenca")
?mde
eksponentna <- mde(vzorec, measure = "CvM")
function = mde(vzorec, pweibull, start =list(shape = 3, scale = 600),
measure = "CvM"))
function = mde(vzorec, pweibull, start =list(shape = 3, scale = 600),
measure = "CvM")
function = mde(vzorec, pweibull, start =list(shape = 3, scale = 600), measure = "CvM")
function = mde(vzorec, pweibull, start =list(shape = 1, min = 1), measure = "CvM")
Y = mde(vzorec, pweibull, start =list(shape = 1, scale = 1), measure = "CvM")
View(Y)
k = estimate$Y
k = Y$estimate
k = Y[1]$estimate
view(k)
k = Y$estimate[1]
lambda = Y$estimate[2]
curve(dweibull(x, k, lambda, log = False))
#c)
hist(vzorec, main="Histogram", xlab = "Višina odškodnine", ylab= "Frekvenca")
curve(dweibull(x, k, lambda))
curve(dweibull(x, k, lambda), add = True)
#c)
hist(vzorec, main="Histogram", xlab = "Višina odškodnine", ylab= "Frekvenca")
curve(dweibull(x, k, lambda), add = True)
curve(dweibull(x, k, lambda), add = TRUE)
curve(dweibull(x, k, lambda), add = TRUE, col = "green")
#c)
hist(vzorec, main="Histogram", xlab = "Višina odškodnine", ylab= "Frekvenca", probability = TRUE)
curve(dweibull(x, k, lambda), add = TRUE, col = "green")
histogram <- hist(vzorec, main="Histogram", xlab = "Višina odškodnine", ylab= "Frekvenca")
#c)
hist(vzorec, main="Histogram", xlab = "Višina odškodnine", ylab= "Frekvenca", probability = TRUE)
curve(dweibull(x, k, lambda), add = TRUE, col = "green")
#c)
hist(vzorec, main="Histogram", xlab = "Višina odškodnine", ylab= "Gostota", probability = TRUE)
curve(dweibull(x, k, lambda), add = TRUE, col = "green")
?Weibull
?gama
?gamma
upanje_Y <- lambda*gamma(1 + 1/k)
upanje_N <- 25/2
upanje_S <- upanje_Y * upanje_N
disperzija_N <- 25 * 1/2 * 1/2
upanje_S <- upanje_Y * upanje_N
upanje_Y <- lambda*gamma(1 + 1/k)
upanje_N <- 25/2
disperzija_Y <- lambda^2*gamma(1 + 2/k) - upanje_Y
disperzija_N <- 25 * 1/2 * 1/2
upanje_YY <- upanje_Y + disperzija_Y
upanje_S <- upanje_Y * upanje_N
disperzija_S <- disperzija_Y * upanje_N + disperzija_N*
disperzija_S <- disperzija_Y * upanje_N + disperzija_N*upanje_YY
upanje_YY <- upanje_Y^2 + disperzija_Y
upanje_S <- upanje_Y * upanje_N
disperzija_S <- disperzija_Y * upanje_N + disperzija_N * upanje_YY
disperzija_Y <- lambda^2*gamma(1 + 2/k) - upanje_Y^2
disperzija_N <- 25 * 1/2 * 1/2
upanje_YY <- upanje_Y^2 + disperzija_Y
upanje_S <- upanje_Y * upanje_N
disperzija_S <- disperzija_Y * upanje_N + disperzija_N * upanje_YY
diskretno <- discretize(pweibull(x, k, lambda), 0, h*n, step = h)
#2.naloga
#a)
h <- 0.25
n <- 100
diskretno <- discretize(pweibull(x, k, lambda), 0, h*n, step = h)
plot(diffinv(diskretno))
n <- 1000
diskretno <- discretize(pweibull(x, k, lambda), 0, h*n, step = h)
plot(diffinv(diskretno))
n <- 10000
diskretno <- discretize(pweibull(x, k, lambda), 0, h*n, step = h)
plot(diffinv(diskretno))
n <- 100
diskretno <- discretize(pweibull(x, k, lambda), 0, h*n, step = h)
plot(diffinv(diskretno))
n <- 60
diskretno <- discretize(pweibull(x, k, lambda), 0, h*n, step = h)
plot(diffinv(diskretno))
n <- 30
diskretno <- discretize(pweibull(x, k, lambda), 0, h*n, step = h)
plot(diffinv(diskretno))
n <- 40
diskretno <- discretize(pweibull(x, k, lambda), 0, h*n, step = h)
plot(diffinv(diskretno))
n <- 35
diskretno <- discretize(pweibull(x, k, lambda), 0, h*n, step = h)
plot(diffinv(diskretno))
n <- 100
diskretno <- discretize(pweibull(x, k, lambda), 0, h*n, step = h)
plot(diffinv(diskretno))
n <- 35
diskretno <- discretize(pweibull(x, k, lambda), 0, h*n, step = h)
plot(diffinv(diskretno))
plot(stepfun(seq(0, (n-1)*h, by = h), diffinv(diskretno)), xlab = "x", ylab = "Porazdelitvena funkcija")
plot(stepfun(seq(0, (n-1)*h, by = h), diffinv(diskretno)), main = "Weibullova porazdelitev", xlab = "x", ylab = "Porazdelitvena funkcija")
curve(pexp(x, rate), add = TRUE, col = 'red')
plot(stepfun(seq(0, (n-1)*h, by = h), diffinv(diskretno)), main = "Weibullova porazdelitev", xlab = "x", ylab = "Porazdelitvena funkcija")
curve(pweibull(x, k, lambda), add = TRUE, col = 'red')
legend("bottomright", legend=c('diskretizacija', 'eksponentna porazelitev'), col=c('black','red'),lty=1:1, cex=0.8)
diskretno <- discretize(pweibull(x, k, lambda), 0, h*n, step = h)
plot(diffinv(diskretno))
plot(stepfun(seq(0, (n-1)*h, by = h), diffinv(diskretno)), main = "Weibullova porazdelitev", xlab = "x", ylab = "Porazdelitvena funkcija")
curve(pweibull(x, k, lambda), add = TRUE, col = 'red')
legend("bottomright", legend=c('diskretizacija', 'Weibullova porazdelitev'), col=c('black','red'),lty=1:1, cex=0.8)
?aggregateDist
#c)
porazdelitvena_S <- aggregateDist(method = 'recursive',
model.freq = 'binom',
model.sev = diskretno,
size = 25,
prob = 1/2,
x.scale = h,
maxit = 1000000,
tol = 0.025)
plot(porazdelitvena_S)
#c)
porazdelitvena_S <- aggregateDist(method = 'recursive',
model.freq = 'binom',
model.sev = diskretno,
size = 25,
prob = 1/2,
x.scale = h,
maxit = 10000,
tol = 0.025)
plot(porazdelitvena_S)
#c)
porazdelitvena_S <- aggregateDist(method = 'recursive',
model.freq = 'binom',
model.sev = diskretno,
size = 25,
prob = 1/2,
x.scale = h,
maxit = 100,
tol = 0.025)
plot(porazdelitvena_S)
#c)
porazdelitvena_S <- aggregateDist(method = 'recursive',
model.freq = 'binom',
model.sev = diskretno,
size = 25,
prob = 1/2,
x.scale = h,
maxit = 1000000,
tol = 0.025)
plot(porazdelitvena_S)
#c)
porazdelitvena_S <- aggregateDist(method = 'recursive',
model.freq = 'binom',
model.sev = diskretno,
size = 25,
prob = 1/2,
x.scale = h)
plot(porazdelitvena_S)
#c)
porazdelitvena_S <- aggregateDist(method = 'recursive',
model.freq = 'binom',
model.sev = diskretno,
size = 25,
prob = 1/2,
x.scale = h,
maxit = 500,
tol = 1e-06)
plot(porazdelitvena_S)
#c)
porazdelitvena_S <- aggregateDist(method = 'recursive',
model.freq = 'binom',
model.sev = diskretno,
size = 25,
prob = 1/2,
x.scale = h,
maxit = 1000000,
tol = 0.025)
plot(porazdelitvena_S)
#c)
porazdelitvena_S <- aggregateDist(method = 'recursive',
model.freq = 'binom',
model.sev = diskretno,
size = 25,
prob = 1/2,
x.scale = h,
maxit = 1000000,
tol = 0.0025)
plot(porazdelitvena_S)
#c)
porazdelitvena_S <- aggregateDist(method = 'recursive',
model.freq = 'binom',
model.sev = diskretno,
size = 25,
prob = 1/2,
x.scale = h,
maxit = 1000000,
tol = 0.00025)
plot(porazdelitvena_S)
upanje_S_1 <- mean(porazdelitvena_S)
disperzija_S_1 <- sum(diff(porazdelitvena) * knots(porazdelitvena)^2) - upanje_s_1^2
disperzija_S_1 <- sum(diff(porazdelitvena_S) * knots(porazdelitvena_S)^2) - upanje_s_1^2
disperzija_S_1 <- sum(diff(porazdelitvena_S) * knots(porazdelitvena_S)^2) - upanje_S_1^2
#c)
porazdelitvena_S <- aggregateDist(method = 'recursive',
model.freq = 'binom',
model.sev = diskretno,
size = 25,
prob = 1/2,
x.scale = h,
maxit = 10000000,
tol = 0.00025)
plot(porazdelitvena_S)
upanje_S_1 <- mean(porazdelitvena_S)
disperzija_S_1 <- sum(diff(porazdelitvena_S) * knots(porazdelitvena_S)^2) - upanje_S_1^2
#c)
porazdelitvena_S <- aggregateDist(method = 'recursive',
model.freq = 'binom',
model.sev = diskretno,
size = 25,
prob = 1/2,
x.scale = h,
maxit = 10000000,
tol = 0.00025)
plot(porazdelitvena_S)
upanje_S_1 <- mean(porazdelitvena_S)
disperzija_S_1 <- sum(diff(porazdelitvena_S) * knots(porazdelitvena_S)^2) - upanje_S_1^2
#c)
porazdelitvena_S <- aggregateDist(method = 'recursive',
model.freq = 'binom',
model.sev = diskretno,
size = 25,
prob = 1/2,
x.scale = h,
maxit = 1000000,
tol = 0.000025)
plot(porazdelitvena_S)
upanje_S_1 <- mean(porazdelitvena_S)
disperzija_S_1 <- sum(diff(porazdelitvena_S) * knots(porazdelitvena_S)^2) - upanje_S_1^2
simulacija_N <- rbinom(10000, 25, 1/2)
View(simulacija_N)
simulacija_S <- c()
?var
for (i in 1: 10000){
simulacija_S[i] <- sum(rweibull(simulacija_N[i], k, lambda))}
for (i in 1: 10000){
simulacija_S[i] <- sum(rweibull(simulacija_N[i], k, lambda))}
return(simulacija_S)
for (i in 1: 10000){
simulacija_S[i] <- sum(rweibull(simulacija_N[i], k, lambda))}
View(simulacija_S)
for (i in 1: 10000){
simulacija_S[i] <- sum(rweibull(simulacija_N[i], k, lambda))
}
upanje_S_2 <- mean(simulacija_S)
disperzija_S_2 <- var(simulacija_S)
?ecdf
#c)
plot(ecdf(simulacija_S),
col = 'red',
add = TRUE)
legend('bottomright',
legend = ('Panjarjev algoritem', 'Monte Carlo simulacija'),
col = c('black', 'red'),
lty=1:1, cex=0.9)
legend('bottomright',
legend = c("Panjarjev algoritem","Monte Carlo simulacija"),
col = c('black', 'red'),
lty=1:1,
cex=0.9)
q()
library(actuar)
#1.naloga
#a)
vzorec <- scan("vzorec3.txt")
histogram <- hist(vzorec, main="Histogram", xlab = "Višina odškodnine", ylab= "Frekvenca")
#b)
Y = mde(vzorec, pweibull, start =list(shape = 1, scale = 1), measure = "CvM")
k = Y$estimate[1]
lambda = Y$estimate[2]
#c)
hist(vzorec, main="Histogram", xlab = "Višina odškodnine", ylab= "Gostota", probability = TRUE)
curve(dweibull(x, k, lambda), add = TRUE, col = "green")
#d)
upanje_Y <- lambda*gamma(1 + 1/k)
upanje_N <- 25/2
disperzija_Y <- lambda^2*gamma(1 + 2/k) - upanje_Y^2
disperzija_N <- 25 * 1/2 * 1/2
upanje_YY <- upanje_Y^2 + disperzija_Y
upanje_S <- upanje_Y * upanje_N
disperzija_S <- disperzija_Y * upanje_N + disperzija_N * upanje_YY
#2.naloga
#a in b)
h <- 0.25
n <- 35
diskretno <- discretize(pweibull(x, k, lambda), 0, h*n, step = h)
plot(diffinv(diskretno))
plot(stepfun(seq(0, (n-1)*h, by = h), diffinv(diskretno)), main = "Weibullova porazdelitev", xlab = "x", ylab = "Porazdelitvena funkcija")
curve(pweibull(x, k, lambda), add = TRUE, col = 'red')
legend("bottomright", legend=c('diskretizacija', 'Weibullova porazdelitev'), col=c('black','red'),lty=1:1, cex=0.8)
#c)
porazdelitvena_S <- aggregateDist(method = 'recursive',
model.freq = 'binom',
model.sev = diskretno,
size = 25,
prob = 1/2,
x.scale = h,
maxit = 1000000,
tol = 0.000025)
plot(porazdelitvena_S)
#d)
upanje_S_1 <- mean(porazdelitvena_S)
disperzija_S_1 <- sum(diff(porazdelitvena_S) * knots(porazdelitvena_S)^2) - upanje_S_1^2
#3.naloga
#a)
simulacija_N <- rbinom(10000, 25, 1/2)
simulacija_S <- c()
for (i in 1: 10000){
simulacija_S[i] <- sum(rweibull(simulacija_N[i], k, lambda))
}
#b)
upanje_S_2 <- mean(simulacija_S)
disperzija_S_2 <- var(simulacija_S)
#c)
plot(ecdf(simulacija_S),
col = 'red',
add = TRUE)
legend('bottomright',
legend = c("Panjarjev algoritem","Monte Carlo simulacija"),
col = c('black', 'red'),
lty=1:1,
cex=0.9)
#1.naloga
#a)
vzorec <- scan("vzorec3.txt")
histogram <- hist(vzorec, main="Histogram", xlab = "Višina odškodnine", ylab= "Frekvenca")
histogram <- hist(vzorec, main="Histogram", xlab = "Višina odškodnine", ylab= "Frekvenca", col =  "light blue")
Y = mde(vzorec, pweibull, start =list(shape = 1, scale = 1), measure = "CvM")
library(actuar)
install.packages("actuar")
library(actuar)
#1.naloga
#a)
vzorec <- scan("vzorec3.txt")
histogram <- hist(vzorec, main="Histogram", xlab = "Višina odškodnine", ylab= "Frekvenca", col =  "light blue")
Y = mde(vzorec, pweibull, start =list(shape = 1, scale = 1), measure = "CvM")
k = Y$estimate[1]
lambda = Y$estimate[2]
#c)
hist(vzorec, main="Histogram", xlab = "Višina odškodnine", ylab= "Gostota", probability = TRUE)
#c)
hist(vzorec, main="Histogram", xlab = "Višina odškodnine", ylab= "Gostota", col =  "light blue", probability = TRUE)
curve(dweibull(x, k, lambda), add = TRUE, col = "green")
curve(dweibull(x, k, lambda), add = TRUE, col = "red")
upanje_Y <- lambda*gamma(1 + 1/k)
upanje_N <- 25/2
disperzija_Y <- lambda^2*gamma(1 + 2/k) - upanje_Y^2
disperzija_N <- 25 * 1/2 * 1/2
upanje_YY <- upanje_Y^2 + disperzija_Y
upanje_S <- upanje_Y * upanje_N
disperzija_S <- disperzija_Y * upanje_N + disperzija_N * upanje_YY
h <- 0.25
n <- 35
diskretno <- discretize(pweibull(x, k, lambda), 0, h*n, step = h)
plot(diffinv(diskretno))
plot(stepfun(seq(0, (n-1)*h, by = h), diffinv(diskretno)), main = "Weibullova porazdelitev", xlab = "x", ylab = "Porazdelitvena funkcija")
curve(pweibull(x, k, lambda), add = TRUE, col = 'red')
legend("bottomright", legend=c('diskretizacija', 'Weibullova porazdelitev'), col=c('black','red'),lty=1:1, cex=0.8)
porazdelitvena_S <- aggregateDist(method = 'recursive',
model.freq = 'binom',
model.sev = diskretno,
size = 25,
prob = 1/2,
x.scale = h,
maxit = 1000000,
tol = 0.000025)
plot(porazdelitvena_S)
upanje_S_1 <- mean(porazdelitvena_S)
disperzija_S_1 <- sum(diff(porazdelitvena_S) * knots(porazdelitvena_S)^2) - upanje_S_1^2
simulacija_N <- rbinom(10000, 25, 1/2)
simulacija_S <- c()
for (i in 1: 10000){
simulacija_S[i] <- sum(rweibull(simulacija_N[i], k, lambda))
}
upanje_S_2 <- mean(simulacija_S)
disperzija_S_2 <- var(simulacija_S)
plot(ecdf(simulacija_S),
col = 'red',
add = TRUE)
legend('bottomright',
legend = c("Panjarjev algoritem","Monte Carlo simulacija"),
col = c('black', 'red'),
lty=1:1,
cex=0.9)
diskretno <- discretize(pweibull(x, k, lambda), 0, h*n, step = h)
plot(diffinv(diskretno))
plot(stepfun(seq(0, (n-1)*h, by = h), diffinv(diskretno)), main = "Weibullova porazdelitev", xlab = "x", ylab = "Porazdelitvena funkcija")
curve(pweibull(x, k, lambda), add = TRUE, col = 'red')
legend("bottomright", legend=c('diskretizacija', 'Weibullova porazdelitev'), col=c('black','red'),lty=1:1, cex=0.8)
hist(vzorec, main="Histogram", xlab = "Višina odškodnine", ylab= "Gostota", col =  "light blue", probability = TRUE)
curve(dweibull(x, k, lambda), add = TRUE, col = "red")
curve(dweibull(x, k, lambda), add = TRUE, col = "red")
legend("topright", legend=c('Weibullova porazdelitev'), col = 'red' ,lty=1:1, cex=0.8)
